<%@ jet 
imports="
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
	org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode) codeGenArgument.getArgument();
String cid = node.getUniqueName();
		

	
String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
String useBulkLoad = ElementParameterParser.getValue(node, "__USE_BULK_LOAD__");
    String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	       dbquery = dbquery.replaceAll("\n"," ");
    	   dbquery = dbquery.replaceAll("\r"," ");
%>

<%


	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String conn = "conn_" + connection;
	%>
	java.sql.Connection connection_<%=cid %> = (java.sql.Connection)globalMap.get("<%=conn %>");
<%	
	INode connectionNode = null; 
	for (INode processNode : node.getProcess().getGeneratingNodes()) { 
		if(connection.equals(processNode.getUniqueName())) { 
			connectionNode = processNode; 
			break; 
		}
	}

%>

java.sql.Statement stmt_<%=cid %> = connection_<%=cid%>.createStatement();
<%
if (("true").equals(useBulkLoad)) {
%>
	java.util.List<String> bulkLoadList_<%=cid%> = new java.util.ArrayList<String>();
	bulkLoadList_<%=cid%>.add("");
	int bulkLoadRow_<%=cid%> = 0;
	int lineCount_<%=cid%> = 0;
	int commitEvery_<%=cid%> = Integer.parseInt("<%=commitEvery%>");
	
	String test_<%=cid%>;
<%
}
%>

String query_<%=cid %> = "";
boolean whetherReject_<%=cid%> = false;
