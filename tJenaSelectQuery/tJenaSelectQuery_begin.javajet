<%@ jet 
imports="
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.IMetadataColumn
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.metadata.types.JavaTypesManager
	org.talend.core.model.metadata.builder.database.ExtractMetaDataUtils
	org.talend.core.model.metadata.types.JavaType		
	java.util.List
	java.util.Map
" 
%>



<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String query = ElementParameterParser.getValue(node,"__QUERY__");
String jenaModel = ElementParameterParser.getValue(node,"__JENAMODEL__");
jenaModel = "model_" + jenaModel;
%>

Model model_<%=cid%> = (Model)globalMap.get("<%=jenaModel%>");


String queryString_<%=cid%> = <%=query%> ;
  
Query query_<%=cid%> = QueryFactory.create(queryString_<%=cid%>) ;
  
QueryExecution queryExec_<%=cid%> = QueryExecutionFactory.create(query_<%=cid%>, model_<%=cid%>) ;

<%

IConnection conn = node.getOutgoingConnections().get(0);

IMetadataTable postMetadata = conn.getMetadataTable();

String outRowName = conn.getName();

List<IMetadataColumn> columnsOut = postMetadata.getListColumns();

%>

ResultSet results_<%=cid%> = queryExec_<%=cid%>.execSelect() ;
	
int nb_line_<%=cid %> = 0;

int x_<%=cid %> = 0;

while (results_<%=cid%>.hasNext())
{


















